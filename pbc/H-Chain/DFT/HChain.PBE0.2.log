#INFO: **** input file is /project/lgagliardi/jangidbhavnesh/Re/PaperData/H-Chain/DFT/hchain.DFT.py ****
import sys
import os
import pickle
import numpy as np
import pandas as pd
from pyscf.pbc import scf, df
from pyscf.pbc import gto as pgto
from pyscf import mcscf, dmrgscf, lib


def getCell(nH, XC='PBE', basis='STO-6G',maxMem=200000, R=1.4):
    """
    Build the Cell object
    """
    cell = pgto.Cell()
    cell.basis=basis
    cell.a = np.diag([nH*R, 17.479, 17.479])
    cell.atom = [['H', np.array([i*R, 0, 0]) ] for i in range(nH)]
    cell.verbose = lib.logger.INFO
    cell.output = f"HChain.{XC}.{nH}.log"
    cell.max_memory = maxMem
    cell.precision = 1e-12
    cell.build()
    return cell

def runDFT(cell, nH, nkpts, XC='PBE'):
    """
    Mean-Field Calculation
    """
    if not XC == 'HF':
        kmf = scf.KRKS(cell).density_fit()
        kmf.xc = XC
    else:
        kmf = scf.KRHF(cell).density_fit()

    kmf.max_cycle=50
    kmf.kpts = cell.make_kpts([nkpts,1, 1])
    kmf.chkfile = f'Hchain.{XC}.{nH}.chk'
    kmf.conv_tol = 1e-12
    kmf.exxdiv = None
    kmf.kernel()

    if not kmf.converged:
        kmf.newton().run()

    assert kmf, "mean-field didn't converge"
    return kmf


def get_bands(cell, kmf, nH, nkpts, R=1.4):
    '''
    For the converged kmf, get the band structure at kpts
    '''
    kpts = kmf.kpts
    energies, mos = kmf.get_bands(kpts)
    energies = np.vstack(energies)
    kptsnorm = np.arange(nkpts)/nkpts 

    kptsnorm = np.hstack([kptsnorm, np.array(1)]) #append gamma at end

    df = pd.DataFrame()
    for i in range(energies.shape[1]):
        e_band = energies[:,i]
        e_band = np.hstack([e_band,np.array(e_band[0])])
        for k, e in zip(kptsnorm,e_band):
            df.loc[k,i] = e
        df.loc["nocc",i] = kmf.mo_occ[0][i]
    return df

class PeriodicDataAnalysis:
    '''
    Some functions to analyze the periodic DFT data
    '''
    def __init__(self, nH, XC, df):
        self.df = df
        self.nH = nH
        self.XC = XC
        self.mo_occ = self.df.loc["nocc"]
        self.df = self.df.drop("nocc")
        self.hartree_to_ev = 27.21139

    def get_homo(self):
        df = self.df.copy()
        homo_idx = np.where(self.mo_occ == 2)[0][-1]
        k = np.array(self.df.index).astype(float)
        energies = self.df.iloc[:,homo_idx].values
        energies *= self.hartree_to_ev
        return energies,k

    def get_lumo(self):
        df = self.df.copy()
        lumo_idx = np.where(self.mo_occ == 0)[0][0]
        k = np.array(self.df.index).astype(float)
        energies = self.df.iloc[:,lumo_idx].values
        energies *= self.hartree_to_ev
        return energies,k

    def savepickel(self):
        """
        Save the LAS Band Structure Data
        """
        nH = self.nH
        XC = self.XC
        homo_e, homo_k = self.get_homo()
        lumo_e, lumo_k = self.get_lumo()
        data = {'nH':nH,
                'XC':XC,
                'homo_e':homo_e,
                'homo_k':homo_k,
                'lumo_e':lumo_e,
                'lumo_k':lumo_k, 
                'bandgap': -lumo_e.min() + homo_e.max()
                }

        with open(f"hchain.{XC}.{nH}.pkl", "wb") as f:
            pickle.dump(data, f)

if __name__ == "__main__":
    for nH in [2, 4, ]:
        for XC in ['HF', 'PBE', 'PBE0', 'SCAN']:
            R = 1.4 # Distance between the H-atoms
            nkpts = int(32/nH)
            cell =  getCell(nH, XC, maxMem=350000, R=R)
            kmf = runDFT(cell, nH, nkpts, XC=XC)
            data = get_bands(cell, kmf, nH, nkpts, R=R)
            
            # Save the data
            PeriodicDataAnalysis(nH, XC, data).savepickel()
            
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='midway3-0553.rcc.local', release='4.18.0-305.3.1.el8.x86_64', version='#1 SMP Tue Jun 1 16:14:33 UTC 2021', machine='x86_64')  Threads 128
Python 3.9.13 (main, Aug 25 2022, 23:26:10) 
[GCC 11.2.0]
numpy 1.26.2  scipy 1.11.4  h5py 3.10.0
Date: Wed Mar 19 01:31:07 2025
PySCF version 2.8.0
PySCF path  /home/jangidbhavnesh/bin/pyscf
GIT ORIG_HEAD a0665c4a7bf54e33f01295b3eea390be7a17d76d
GIT HEAD (branch master) 6f6d3741bf42543e02ccaa1d4ef43d9bf83b3dda

[ENV] PYSCF_EXT_PATH /home/jangidbhavnesh/bin/pyscf:/home/jangidbhavnesh/bin/pyscf-forge:/home/jangidbhavnesh/bin/dmrgscf:/home/jangidbhavnesh/bin:/home/jangidbhavnesh/bin/pyscf:/home/jangidbhavnesh/bin/pyscf-forge:/home/jangidbhavnesh/bin/dmrgscf:/home/jangidbhavnesh/bin:/home/jangidbhavnesh/pdir/Apps/dmrgscf:/home/jangidbhavnesh/pdir/Apps/pyscf:/home/jangidbhavnesh/pdir/Apps/pyscf-forge:/home/jangidbhavnesh/pdir/Apps:
[CONFIG] conf_file /home/jangidbhavnesh/.pyscf_conf.py
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 H      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 H      1.400000000000   0.000000000000   0.000000000000 AA    2.645616574391   0.000000000000   0.000000000000 Bohr   0.0

nuclear repulsion = 0.830100244147843
number of shells = 2
number of NR pGTOs = 12
number of NR cGTOs = 2
basis = STO-6G
ecp = {}
CPU time:      2467.75
lattice vectors  a1 [5.291233149, 0.000000000, 0.000000000]
                 a2 [0.000000000, 33.030522931, 0.000000000]
                 a3 [0.000000000, 0.000000000, 33.030522931]
dimension = 3
low_dim_ft_type = None
Cell volume = 5772.82
rcut = 24.293288226937268 (nimgs = [5 1 1])
lattice sum = 77 cells
precision = 1e-12
pseudo = None
ke_cutoff = 3527.180576457948
    = [143 885 885] mesh (112001175 PWs)


******** <class 'pyscf.pbc.dft.krks.KRKS'> ********
method = KRKS
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-12
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = Hchain.PBE0.2.chk
max_memory 350000 MB (current use 646 MB)


******** PBC SCF flags ********
N kpts = 16
Exchange divergence treatment (exxdiv) = None
DF object = <pyscf.pbc.df.df.GDF object at 0x7f12669b1d60>
XC functionals = PBE0
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x7f133e8dd8b0>
grids dens level: 3
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x7f133e8be280>

WARN: df.j_only cannot be used with hybrid functional

Set gradient conv threshold to 1e-06


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [11 55 55] (33275 PWs)
ke_cutoff = 13.189440425651801
omega = 0.4204883996573506
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
tot grids = 20332
cell vol = 5772.81709  sum(weights) = 3255.6311
nelec by numeric integration = 1.9999998608174012


******** <class 'pyscf.pbc.df.df.GDF'> ********
auxbasis = None
exp_to_discard = None
_cderi_to_save = /tmp/jobs/29239890/tmpv9hph5xv
len(kpts) = 16
ETB for H: l = 0, exps = 0.200224856 * 2^n , n = 0..8

WARN: Even tempered Gaussians are generated as DF auxbasis for  H

Drop 0 primitive fitting functions
make aux basis, num shells = 18, num cGTOs = 18
auxcell.rcut 17.068110412336893


******** <class 'pyscf.pbc.df.rsdf_builder._RSGDFBuilder'> ********
mesh = [ 9 47 47] (19881 PWs)
ke_cutoff = 9.570938251261733
omega = 0.3581938219303357
exclude_d_aux = True
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
init E= -0.827839967553496
HOMO = -0.108607035027  LUMO = -0.100506264776
nelec by numeric integration = 1.9999998793135894
cycle= 1 E= -1.03174849005802  delta_E= -0.204  |g|= 0.0199  |ddm|= 4.27
HOMO = -0.132197931659  LUMO = -0.116198077263
nelec by numeric integration = 1.999999879296957
cycle= 2 E= -1.03184932870815  delta_E= -0.000101  |g|= 0.00779  |ddm|= 0.198
HOMO = -0.134983949173  LUMO = -0.113322495956
nelec by numeric integration = 1.9999998792850628
cycle= 3 E= -1.03186165299299  delta_E= -1.23e-05  |g|= 0.000521  |ddm|= 0.0817
HOMO = -0.135040873666  LUMO = -0.113250534639
nelec by numeric integration = 1.9999998792842806
cycle= 4 E= -1.03186169334154  delta_E= -4.03e-08  |g|= 5.97e-06  |ddm|= 0.00463
HOMO = -0.135041563193  LUMO = -0.113249848149
nelec by numeric integration = 1.9999998792842955
cycle= 5 E= -1.03186169334524  delta_E= -3.7e-12  |g|= 4.38e-07  |ddm|= 3.76e-05
HOMO = -0.135041595707  LUMO = -0.113249825614
nelec by numeric integration = 1.9999998792842797
cycle= 6 E= -1.03186169334524  delta_E= 2.89e-15  |g|= 5e-07  |ddm|= 6.12e-06
HOMO = -0.135041596255  LUMO = -0.113249825265
nelec by numeric integration = 1.9999998792842986
Extra cycle  E= -1.03186169334523  delta_E= 7.33e-15  |g|= 6.09e-07  |ddm|= 7.26e-06
converged SCF energy = -1.03186169334523


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [11 55 55] (33275 PWs)
ke_cutoff = 13.189440425651801
omega = 0.4204883996573506
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
nelec by numeric integration = 1.9999998792842986

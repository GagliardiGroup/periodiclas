Discarded 16 diffused primitive functions, 0 contracted functions
#INFO: **** input file is /project/lgagliardi/jangidbhavnesh/Re/Final/MottTransition/NewGeometry/NiO.py ****
import os, sys
import shutil
import numpy as np
import scipy.linalg as la
from pyscf.pbc import scf, gto, df, dft, tools
from pyscf.tools import molden
from pyscf import mcpdft, lib, mcscf
from pyscf.mcscf import avas,project_init_guess
from pyscf import mcscf, dmrgscf
from functools import reduce
from pyscf import __config__
from pyscf.pbc.tools import k2gamma
# Import mcpdft from mrh
from mrh.my_pyscf import mcpdft
from pyscf.tools import molden
pre_orth_method = getattr(__config__, 'pbc_scf_analyze_pre_orth_method', 'ANO')

def getCell(nd=2.085, spin=0, maxMem=200000, basis='def2SVP', pseudo=None):
    cell = gto.Cell()
    cell.a = [[2*nd, nd, nd], [nd, 2*nd, nd], [2*nd, 2*nd, 4*nd]]
    cell.atom= f'''
Ni 0 0 0
Ni {2*nd} {2*nd} {2*nd}
Ni {nd} {nd} {2*nd}
Ni {3*nd} {3*nd} {4*nd}
O {nd} {nd} {nd}
O {3*nd} {3*nd} {3*nd}
O {2*nd} {2*nd} {3*nd}
O {4*nd} {4*nd} {5*nd}
    '''
    cell.basis = basis
    cell.pseudo = pseudo
    cell.output=f'NiO_{nd}.log'
    cell.verbose=lib.logger.INFO
    cell.precision=1e-12
    cell.exp_to_discard=0.1
    cell.spin=0
    cell.max_memory = maxMem
    cell.build()
    return cell

def get_gdf(cell, filename, restart=True):
    if not os.path.exists(filename) or restart:
        gdf = df.GDF(cell)
        gdf._cderi_to_save = filename
        gdf.build()
    return filename

def initguess(mol, mf, ao_label: list, activespacesize:int):
    '''
    Based on the ao_label find the orb which has
    highest character of that ao
    '''
    from pyscf.lo import orth
    baslst = mol.search_ao_label(ao_label)
    assert len(baslst) >=activespacesize
    orbindex=[]
    if len(mf.mo_coeff) > 1:
        mo_coeff = mf.mo_coeff[0]
    else:
        mo_coeff = mf.mo_coeff
    
    nkpts, nao = 1, mf.mo_coeff.shape[1]
    s_sc = mf.get_ovlp()
    orth_coeff = orth.orth_ao(mol, 'meta_lowdin',pre_orth_ao=None, s=s_sc)
    C = reduce(np.dot,(orth_coeff.T.conj(), s_sc, mf.mo_coeff))
    for orb in baslst:
        ao = C[orb]
        A = np.argsort(ao*ao.conj())[-activespacesize:][::-1]
        for element in A:
            if element not in orbindex:
                orbindex.append(element)
                break
    orbind = [x+1 for x in orbindex]
    return sorted(orbind[:activespacesize])

def runSCF(cell,nd=2.085, Restricted=True, Unrestricted=False):
    '''
    Run the Hartree Fock
    '''
    if Restricted:
        kmf = scf.ROHF(cell).density_fit()
    elif Unrestricted:
        kmf = scf.UHF(cell).density_fit()
    else:
        raise NotImplementedError

    kmf.max_cycle=100
    kmf.chkfile = f'NiO_{nd}.chk'
    kmf.init_guess='chk'
    kmf.with_df._cderi = get_gdf(cell, kmf.chkfile.rstrip('.chk')+'.h5', restart=False)
    kmf.exxdiv = None
    kmf.conv_tol = 1e-10
    kmf.kernel()

    if not kmf.converged:
        kmf.newton().run()

    assert kmf, "mean-field didn't converge"
    return kmf

def getfrags(nfrags: int):
    '''
    If NiO is in POSCAR Format where first N-atoms are Ni and
    next N-atoms are O, then get the frag atom no
    '''
    assert nfrags>=1, "You should know what you are doing"
    frags = []
    offset = nfrags * 2
    for i in range(nfrags):
        frag = [i * 2, i * 2 + offset, i * 2 + 1, i * 2 + offset + 1]
        frags.append(frag)
    return frags

def runLASSCF(cell, kmf):
    nfrags = 2
    ncas = 10 
    nelec = 16
    norb  = tuple([ncas,]*nfrags)
    nele  = tuple([nelec,]*nfrags)
    nspin = tuple([1,]*nfrags)

    orblst = initguess(cell, kmf, ao_label=['Ni 3d', ], activespacesize=sum(norb))

    frags = getfrags(nfrags)
    from mrh.my_pyscf.mcscf.lasscf_o0 import LASSCF
    las = LASSCF(kmf, norb, nele, spin_sub=nspin)
    sortedmo = las.sort_mo(orblst, kmf.mo_coeff)
    mo0 = las.localize_init_guess(frags, sortedmo)
    #mo0 = sortedmo
    molden.from_mo(cell, f'NiO.{nfrags}.las.molden', mo0[:, las.ncore:las.ncore+(ncas*nfrags)])
    las_weights,las_charges,las_spins,las_smults=genModelSpace(nfrags)
    las = las.state_average(las_weights,las_charges,las_spins,las_smults)
    elasci = las.lasci_(mo0)
    las.mo_coeff = mo0
    return las

# Model Space for the band gap
def genModelSpace(nfrags):
    las_charges = []
    las_spins = [] #2s
    las_smults = [] #2s+1

    las_charges += [[0]*nfrags]
    las_spins += [[0]*nfrags]
    las_smults += [[las_spins[0][0]+1]*nfrags]

    for i in range(nfrags):
        idxarr = np.eye(nfrags)[:,i].astype(int)
        las_charges += [list(idxarr)]
        spins = idxarr
        las_spins += [list(spins)]
        las_smults += [list(spins + 1)]

    for i in range(nfrags):
        idxarr = np.eye(nfrags)[:,i].astype(int)
        las_charges += [list(-idxarr)]
        spins = idxarr
        las_spins += [list(spins)]
        las_smults += [list(spins + 1)]

    nrootspaces = len(las_charges)
    las_weights = np.ones(nrootspaces)/nrootspaces
    return las_weights,las_charges,las_spins,las_smults

def processlas(las):
    from periodiclas.tools import sign_control, util
    las.ci = sign_control.fix_sign(las)
    las.dump_spaces()
    return las

def runLASSI(las):
    from mrh.my_pyscf.lassi import lassi
    lsi = lassi.LASSI(las)
    energies_lassi, civecs_lassi = lsi.kernel()
    return lsi, energies_lassi

def runLASSIPDFT(lsi, states=[0]):
    from mrh.my_pyscf import mcpdft
    mc = mcpdft.LASSI(lsi, 'tPBE', states=states)
    energies = mc.kernel()[0]
    return energies

def getBANDGAP(nele, lsi, energies_lassi):
    stateidx = [
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele - 1))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele + 1))[0]]
    stateidx = [list(x) for x in stateidx]
    ip = 27.21139*(min(energies_lassi[stateidx[1]]) - min(energies_lassi[stateidx[0]]))
    ea = 27.21139*(min(energies_lassi[stateidx[0]]) - min(energies_lassi[stateidx[2]]))
    return ip, ea

def getNatorbOcc(nele, lsi):
    from mrh.my_pyscf.lassi.lassi import root_make_rdm12s
    stateidx = [
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele - 1))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele + 1))[0]]
    stateidx = [int(list(x)[0]) for x in stateidx]
    for state in stateidx:
        natorb_casdm1 = root_make_rdm12s (lsi, lsi.ci, lsi.si, state=state, opt=lsi.opt)[0].sum (0)
        mo_occ = lsi._las.canonicalize (natorb_casdm1=natorb_casdm1)[2]
        mo_occ = [x for x in mo_occ if 0 < x < 2]
        print("State-",state, mo_occ)

def savepickel(mf, lsi, pdftenergy=0, R=2.47):
    """
    Save the LAS Band Structure Data
    """

    from periodiclas.tools import sign_control, util
    civec = lsi.get_sivec_vacuum_shuffle(state=0)
    charges = util.las_charges(lsi._las)

    data = {"energies_lassi":lsi.e_roots,
            "energies_lassipdft":pdftenergy,
            "civecs":civec,
            "charges":charges,
            "dist":R,
            "mf_coeff":mf.mo_coeff,
            "mf_occ":mf.mo_occ,
            "mf_ene":mf.mo_energy}


if __name__ == "__main__":
    nd = 2.085
    for nd in [1.7, 2.1, 2.3, 2.7, 3.1, 3.5, 3.9]:
        cell =  getCell(nd, maxMem=500000, basis='gth-dzvp-molopt-sr', pseudo='gth-pade')
        kmf = runSCF(cell, nd, Restricted=True, Unrestricted=False)

        #molden.from_mo(cell, f'NiO_{nU}.molden', kmf.mo_coeff)
        las = runLASSCF(cell, kmf)
        las = processlas(las)

        lsi,energies_lassi = runLASSI(las)
        IP_LASSI, EA_LASSI = getBANDGAP(32, lsi,energies_lassi)
        energies_mcpdft = runLASSIPDFT(lsi, states=[x for x in range(len(energies_lassi))])
        IP_PDFT, EA_PDFT = getBANDGAP(32, lsi,np.asarray(energies_mcpdft))
        
        savepickel(kmf, lsi, pdftenergy=energies_mcpdft, R=nd)

        print("Results: LASSI ", )
        print("Ionization Energy: ", IP_LASSI)
        print("ElectAtt   Energy: ", EA_LASSI)
        print("Band Gap: ", IP_LASSI-EA_LASSI)

        print("Results: PDFT", )
        print("Ionization Energy: ", IP_PDFT)
        print("ElectAtt   Energy: ", EA_PDFT)
        print("Band Gap: ", IP_PDFT-EA_PDFT)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='midway3-0555.rcc.local', release='4.18.0-305.3.1.el8.x86_64', version='#1 SMP Tue Jun 1 16:14:33 UTC 2021', machine='x86_64')  Threads 128
Python 3.9.13 (main, Aug 25 2022, 23:26:10) 
[GCC 11.2.0]
numpy 1.26.2  scipy 1.11.4  h5py 3.10.0
Date: Fri Mar 14 23:22:49 2025
PySCF version 2.8.0
PySCF path  /home/jangidbhavnesh/bin/pyscf
GIT ORIG_HEAD a0665c4a7bf54e33f01295b3eea390be7a17d76d
GIT HEAD (branch master) 6f6d3741bf42543e02ccaa1d4ef43d9bf83b3dda
mrh path  /home/jangidbhavnesh/bin/mrh
GIT ORIG_HEAD ed1f605b415d72e71fb56d97b9d163809b62b172
GIT HEAD (branch master) ea89791c15c26abd3b0f0efdeadd7a286ca4585a

[ENV] PYSCF_EXT_PATH /home/jangidbhavnesh/bin/pyscf:/home/jangidbhavnesh/bin/pyscf-forge:/home/jangidbhavnesh/bin/dmrgscf:/home/jangidbhavnesh/bin:
[CONFIG] conf_file /home/jangidbhavnesh/.pyscf_conf.py
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 96
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ni     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 Ni     4.600000000000   4.600000000000   4.600000000000 AA    8.692740172999   8.692740172999   8.692740172999 Bohr   0.0
[INPUT]  3 Ni     2.300000000000   2.300000000000   4.600000000000 AA    4.346370086500   4.346370086500   8.692740172999 Bohr   0.0
[INPUT]  4 Ni     6.900000000000   6.900000000000   9.200000000000 AA   13.039110259499  13.039110259499  17.385480345999 Bohr   0.0
[INPUT]  5 O      2.300000000000   2.300000000000   2.300000000000 AA    4.346370086500   4.346370086500   4.346370086500 Bohr   0.0
[INPUT]  6 O      6.900000000000   6.900000000000   6.900000000000 AA   13.039110259499  13.039110259499  13.039110259499 Bohr   0.0
[INPUT]  7 O      4.600000000000   4.600000000000   6.900000000000 AA    8.692740172999   8.692740172999  13.039110259499 Bohr   0.0
[INPUT]  8 O      9.200000000000   9.200000000000  11.500000000000 AA   17.385480345999  17.385480345999  21.731850432498 Bohr   0.0

nuclear repulsion = -433.909817221031
number of shells = 28
number of NR pGTOs = 500
number of NR cGTOs = 156
basis = gth-dzvp-molopt-sr
ecp = {}
CPU time:     31430.95
lattice vectors  a1 [8.692740173, 4.346370086, 4.346370086]
                 a2 [4.346370086, 8.692740173, 4.346370086]
                 a3 [8.692740173, 8.692740173, 17.385480346]
dimension = 3
low_dim_ft_type = None
Cell volume = 656.856
exp_to_discard = 0.1
rcut = 21.840927745318478 (nimgs = [5 5 3])
lattice sum = 2003 cells
precision = 1e-12
pseudo = gth-pade
ke_cutoff = 1563.543132532536
    = [191 191 381] mesh (13899261 PWs)


******** <class 'pyscf.pbc.df.df.GDF'> ********
auxbasis = None
exp_to_discard = 0.1
_cderi_to_save = NiO_2.3.h5
len(kpts) = 1
ETB for O: l = 0, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 1, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 2, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 3, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 4, exps = 0.32498323008 * 2^n , n = 0..6
ETB for Ni: l = 0, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 1, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 2, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 3, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 4, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 5, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 6, exps = 0.689956484316 * 2^n , n = 0..4

WARN: Even tempered Gaussians are generated as DF auxbasis for  O Ni

Drop 0 primitive fitting functions
make aux basis, num shells = 280, num cGTOs = 1680
auxcell.rcut 14.405988831603228


******** <class 'pyscf.pbc.df.rsdf_builder._RSGDFBuilder'> ********
mesh = [13 13 23] (3887 PWs)
ke_cutoff = 5.268056978408831
omega = 0.2436696360142079
exclude_d_aux = True
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True


******** <class 'pyscf.pbc.scf.rohf.ROHF'> ********
method = ROHF
initial guess = chk
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-10
SCF conv_tol_grad = None
SCF max_cycles = 100
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = NiO_2.3.chk
max_memory 500000 MB (current use 6184 MB)
******** PBC SCF flags ********
kpt = [0. 0. 0.]
Exchange divergence treatment (exxdiv) = None
DF object = <pyscf.pbc.df.df.GDF object at 0x7f23ec366a30>
number of electrons per cell  alpha = 48 beta = 48
Set gradient conv threshold to 1e-05

WARN: Fail in reading NiO_2.3.chk. Use MINAO initial guess



******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
init E= -719.397002284892

WARN: HOMO 0.874159719074269 >= LUMO 0.874159719074384

cycle= 1 E= -705.542530226841  delta_E= 13.9  |g|= 11.1  |ddm|= 5.74
  HOMO = 0.67588703193969  LUMO = 0.692186534993555
cycle= 2 E= -681.290079570467  delta_E= 24.3  |g|= 12.8  |ddm|= 9.74
  HOMO = 0.569698162615836  LUMO = 0.636794204481278
cycle= 3 E= -714.924614374666  delta_E= -33.6  |g|= 5.65  |ddm|= 8.26
  HOMO = 0.866454024419544  LUMO = 0.883028064879209
cycle= 4 E= -675.819660788251  delta_E= 39.1  |g|= 12.5  |ddm|= 6.87
  HOMO = 0.453664136139739  LUMO = 0.47414019762751
cycle= 5 E= -719.660787253043  delta_E= -43.8  |g|= 3.75  |ddm|= 6.12
  HOMO = 0.448545604390895  LUMO = 0.52778143128588
cycle= 6 E= -718.54380813649  delta_E= 1.12  |g|= 4.33  |ddm|= 1.84
  HOMO = 0.44799054772463  LUMO = 0.527834823002606
cycle= 7 E= -718.520687221702  delta_E= 0.0231  |g|= 4.35  |ddm|= 0.00975
  HOMO = 0.458778360314608  LUMO = 0.495016758209575
cycle= 8 E= -719.415588034058  delta_E= -0.895  |g|= 3.79  |ddm|= 0.422
  HOMO = 0.462887920302269  LUMO = 0.495514339776151
cycle= 9 E= -719.510635964747  delta_E= -0.095  |g|= 3.72  |ddm|= 0.147
  HOMO = 0.466710408875041  LUMO = 0.497390295504867
cycle= 10 E= -719.637721559364  delta_E= -0.127  |g|= 3.63  |ddm|= 0.331
  HOMO = 0.479843484315221  LUMO = 0.488187000713659
cycle= 11 E= -721.707062121348  delta_E= -2.07  |g|= 1.73  |ddm|= 2.35
  HOMO = 0.49707234017091  LUMO = 0.534557035607817
cycle= 12 E= -722.353731603604  delta_E= -0.647  |g|= 1.55  |ddm|= 2.09
  HOMO = 0.408028559422457  LUMO = 0.585252978644038
cycle= 13 E= -722.66470849315  delta_E= -0.311  |g|= 0.69  |ddm|= 0.613
  HOMO = 0.440989682207471  LUMO = 0.659704346121751
cycle= 14 E= -722.720205126067  delta_E= -0.0555  |g|= 0.367  |ddm|= 0.531
  HOMO = 0.41651854426377  LUMO = 0.681871593617291
cycle= 15 E= -722.747372674678  delta_E= -0.0272  |g|= 0.0778  |ddm|= 0.242
  HOMO = 0.416559114811602  LUMO = 0.68499325312167
cycle= 16 E= -722.748758661974  delta_E= -0.00139  |g|= 0.022  |ddm|= 0.0532
  HOMO = 0.416189958273595  LUMO = 0.685718541858273
cycle= 17 E= -722.749065343  delta_E= -0.000307  |g|= 0.0142  |ddm|= 0.0238
  HOMO = 0.416394998590693  LUMO = 0.685742198132599
cycle= 18 E= -722.749349246042  delta_E= -0.000284  |g|= 0.0121  |ddm|= 0.0247
  HOMO = 0.416147041086016  LUMO = 0.685804361920904
cycle= 19 E= -722.749686098668  delta_E= -0.000337  |g|= 0.0114  |ddm|= 0.0312
  HOMO = 0.416360346107287  LUMO = 0.686664339696245
cycle= 20 E= -722.750810401  delta_E= -0.00112  |g|= 0.00894  |ddm|= 0.124
  HOMO = 0.416151852910162  LUMO = 0.689143100663076
cycle= 21 E= -722.752004638534  delta_E= -0.00119  |g|= 0.00918  |ddm|= 0.253
  HOMO = 0.41622898238471  LUMO = 0.688717205545333
cycle= 22 E= -722.751998372115  delta_E= 6.27e-06  |g|= 0.00773  |ddm|= 0.00892
  HOMO = 0.416439382431591  LUMO = 0.686471628601603
cycle= 23 E= -722.752120215098  delta_E= -0.000122  |g|= 0.00262  |ddm|= 0.0603
  HOMO = 0.416497821559304  LUMO = 0.685948465530141
cycle= 24 E= -722.752141439253  delta_E= -2.12e-05  |g|= 0.00205  |ddm|= 0.0182
  HOMO = 0.41648507164932  LUMO = 0.686155876716305
cycle= 25 E= -722.752148014891  delta_E= -6.58e-06  |g|= 0.00193  |ddm|= 0.00584
  HOMO = 0.416495915038589  LUMO = 0.685600424168006
cycle= 26 E= -722.752173691813  delta_E= -2.57e-05  |g|= 0.00189  |ddm|= 0.0202
  HOMO = 0.416480537079964  LUMO = 0.685809896428719
cycle= 27 E= -722.752186991697  delta_E= -1.33e-05  |g|= 0.00107  |ddm|= 0.0172
  HOMO = 0.416448122509702  LUMO = 0.68604980026954
cycle= 28 E= -722.752191554576  delta_E= -4.56e-06  |g|= 0.000402  |ddm|= 0.0128
  HOMO = 0.416455663462451  LUMO = 0.68597239170493
cycle= 29 E= -722.752191725719  delta_E= -1.71e-07  |g|= 0.000239  |ddm|= 0.00311
  HOMO = 0.416454323606491  LUMO = 0.686013603546758
cycle= 30 E= -722.752191809006  delta_E= -8.33e-08  |g|= 7.91e-05  |ddm|= 0.00141
  HOMO = 0.416455896715693  LUMO = 0.686007741025023
cycle= 31 E= -722.752191854266  delta_E= -4.53e-08  |g|= 5.39e-05  |ddm|= 0.0015
  HOMO = 0.416456918448702  LUMO = 0.686005793702419
cycle= 32 E= -722.75219184944  delta_E= 4.83e-09  |g|= 4.24e-05  |ddm|= 0.000332
  HOMO = 0.416456366231848  LUMO = 0.686004434388944
cycle= 33 E= -722.752191856648  delta_E= -7.21e-09  |g|= 2.53e-05  |ddm|= 0.000414
  HOMO = 0.416457514739092  LUMO = 0.686003801003897
cycle= 34 E= -722.752191859897  delta_E= -3.25e-09  |g|= 1.89e-05  |ddm|= 0.000329
  HOMO = 0.416457167452078  LUMO = 0.686004131692693
cycle= 35 E= -722.752191860831  delta_E= -9.34e-10  |g|= 1.73e-05  |ddm|= 0.000139
  HOMO = 0.416457331551786  LUMO = 0.686003951044086
cycle= 36 E= -722.75219186137  delta_E= -5.38e-10  |g|= 1.66e-05  |ddm|= 6.59e-05
  HOMO = 0.416457500220212  LUMO = 0.686003949844095
cycle= 37 E= -722.752191861943  delta_E= -5.73e-10  |g|= 1.55e-05  |ddm|= 6.62e-05
  HOMO = 0.416457344644573  LUMO = 0.686004420241336
cycle= 38 E= -722.752191863492  delta_E= -1.55e-09  |g|= 1.38e-05  |ddm|= 0.000148
  HOMO = 0.41645743426064  LUMO = 0.686003930189511
cycle= 39 E= -722.752191864725  delta_E= -1.23e-09  |g|= 1.11e-05  |ddm|= 0.000186
  HOMO = 0.416457437629488  LUMO = 0.686004367467716
cycle= 40 E= -722.752191865302  delta_E= -5.77e-10  |g|= 9.54e-06  |ddm|= 0.00014
  HOMO = 0.416457250604426  LUMO = 0.686004086764786
cycle= 41 E= -722.752191865663  delta_E= -3.61e-10  |g|= 9e-06  |ddm|= 5.34e-05
  HOMO = 0.416457448669604  LUMO = 0.686004164455234
cycle= 42 E= -722.752191865836  delta_E= -1.73e-10  |g|= 8.1e-06  |ddm|= 4.08e-05
  HOMO = 0.416457137657747  LUMO = 0.686004371491334
cycle= 43 E= -722.752191866282  delta_E= -4.46e-10  |g|= 5.54e-06  |ddm|= 0.000107
  HOMO = 0.416457331361277  LUMO = 0.686003969253087
cycle= 44 E= -722.752191866526  delta_E= -2.44e-10  |g|= 3.16e-06  |ddm|= 8.79e-05
  HOMO = 0.41645722576913  LUMO = 0.686004111440841
cycle= 45 E= -722.752191866569  delta_E= -4.24e-11  |g|= 1.94e-06  |ddm|= 3.57e-05
  HOMO = 0.416457233087835  LUMO = 0.686004090242119
Extra cycle  E= -722.752191866571  delta_E= -2.5e-12  |g|= 2.44e-06  |ddm|= 3.12e-06
converged SCF energy = -722.752191866571


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 4.561024e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 1.028316e-04 ; sigma = 1.288245e-07 ; 2/2 fragment CI solvers converged
Cycle 2: max grad = 5.247845e-07 ; sigma = 6.295409e-12 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 2 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 9.853741e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 4.683422e-04 ; sigma = 1.369541e-02 ; 1/2 fragment CI solvers converged
Cycle 2: max grad = 2.196452e-05 ; sigma = 9.028624e-06 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 1.608060e-06 ; sigma = 2.198047e-08 ; 2/2 fragment CI solvers converged
Cycle 4: max grad = 2.132268e-06 ; sigma = 1.199396e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 4 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 9.853443e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 4.685619e-04 ; sigma = 1.369606e-02 ; 1/2 fragment CI solvers converged
Cycle 2: max grad = 2.197129e-05 ; sigma = 9.035723e-06 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 1.584014e-06 ; sigma = 2.198893e-08 ; 2/2 fragment CI solvers converged
Cycle 4: max grad = 2.114896e-06 ; sigma = 1.290346e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 4 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 7.518717e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 2.160653e-04 ; sigma = 4.931816e-02 ; 2/2 fragment CI solvers converged
Cycle 2: max grad = 4.664293e-07 ; sigma = 9.259255e-07 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 3.698254e-09 ; sigma = 1.513456e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 3 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 7.518767e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 2.160659e-04 ; sigma = 4.931829e-02 ; 2/2 fragment CI solvers converged
Cycle 2: max grad = 4.664247e-07 ; sigma = 9.259287e-07 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 3.698217e-09 ; sigma = 1.508482e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 3 cycles
LASCI state-average energy = -722.601923134022
LASCI state 0 energy = -722.813387240746
LASCI state 1 energy = -722.985556844327
LASCI state 2 energy = -722.985556943587
LASCI state 3 energy = -722.112557373433
LASCI state 4 energy = -722.112557268017
******** LAS space tables ********
LAS space 0: (16e+16e,20o) wfynsm=A
Converged? True
E(LAS) = -722.813387240746
S^2 = 0.0000000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+8e,10o)     1    A        1
    1   (8e+8e,10o)     1    A        1
LAS space 1: (16e+15e,20o) wfynsm=A
Converged? True
E(LAS) = -722.985556844327
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+7e,10o)     2    A        1
    1   (8e+8e,10o)     1    A        1
LAS space 2: (16e+15e,20o) wfynsm=A
Converged? True
E(LAS) = -722.985556943587
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+8e,10o)     1    A        1
    1   (8e+7e,10o)     2    A        1
LAS space 3: (17e+16e,20o) wfynsm=A
Converged? True
E(LAS) = -722.112557373433
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (9e+8e,10o)     2    A        1
    1   (8e+8e,10o)     1    A        1
LAS space 4: (17e+16e,20o) wfynsm=A
Converged? True
E(LAS) = -722.112557268017
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+8e,10o)     1    A        1
    1   (9e+8e,10o)     2    A        1
LASSI op_o0 memory check: 1709.058096 MB needed of 492600.920064 MB available (500000 MB max)


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
Symmetry analysis of 5 LAS rootspaces:
 ix            Energy  <S**2>  Neleca  Nelecb  Nelec   Wfnsym
  0   -722.8133872407   0.000      16      16      32       A
  1   -722.9855568443   0.750      16      15      31       A
  2   -722.9855569436   0.750      16      15      31       A
  3   -722.1125573734   0.750      17      16      33       A
  4   -722.1125572680   0.750      17      16      33       A
Build + diag H matrix LASSI symmetry block 0
['neleca', 'nelecb', 'irrep'] = (17, 16, 0)
(2 rootspaces; 2 states)
LASSI op_o0 memory check: 123.54336 MB needed of 492597.725184 MB available (500000 MB max)
2/2 linearly independent model states
Build + diag H matrix LASSI symmetry block 1
['neleca', 'nelecb', 'irrep'] = (16, 15, 0)
(2 rootspaces; 2 states)
LASSI op_o0 memory check: 1652.196096 MB needed of 492597.725184 MB available (500000 MB max)
2/2 linearly independent model states
Build + diag H matrix LASSI symmetry block 2
['neleca', 'nelecb', 'irrep'] = (16, 16, 0)
(1 rootspaces; 1 states)
LASSI eigenvalues (5 total):
 ix            Energy  <S**2>  Neleca  Nelecb  Wfnsym
  0   -722.9891566388   0.750      16      15       A
  1   -722.9819571491   0.750      16      15       A
  2   -722.8133872407   0.000      16      16       A
  3   -722.1125651903   0.750      17      16       A
  4   -722.1125494512   0.750      17      16       A
Building tPBE functional
Building tPBE functional
Periodic OT-FNAL class is used
LASSI op_o0 memory check: 1709.058096 MB needed of 492597.725184 MB available (500000 MB max)


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 0 E = -741.5678974450781, Eot(tPBE) = -80.7453898225959


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 1 E = -741.5617253720092, Eot(tPBE) = -80.7500027717924


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 2 E = -741.4382166533985, Eot(tPBE) = -81.84332949891724


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 3 E = -741.0604134299464, Eot(tPBE) = -82.78554996557675


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 4 E = -741.0604035624796, Eot(tPBE) = -82.7855576200992

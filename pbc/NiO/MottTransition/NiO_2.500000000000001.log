Discarded 16 diffused primitive functions, 0 contracted functions
#INFO: **** input file is /project/lgagliardi/jangidbhavnesh/Re/Final/MottTransition/NewGeometry/NiO.py ****
import os, sys
import shutil
import numpy as np
import scipy.linalg as la
from pyscf.pbc import scf, gto, df, dft, tools
from pyscf.tools import molden
from pyscf import mcpdft, lib, mcscf
from pyscf.mcscf import avas,project_init_guess
from pyscf import mcscf, dmrgscf
from functools import reduce
from pyscf import __config__
from pyscf.pbc.tools import k2gamma
# Import mcpdft from mrh
from mrh.my_pyscf import mcpdft
from pyscf.tools import molden
pre_orth_method = getattr(__config__, 'pbc_scf_analyze_pre_orth_method', 'ANO')

def getCell(nd=2.085, spin=0, maxMem=200000, basis='def2SVP', pseudo=None):
    cell = gto.Cell()
    cell.a = [[2*nd, nd, nd], [nd, 2*nd, nd], [2*nd, 2*nd, 4*nd]]
    cell.atom= f'''
Ni 0 0 0
Ni {2*nd} {2*nd} {2*nd}
Ni {nd} {nd} {2*nd}
Ni {3*nd} {3*nd} {4*nd}
O {nd} {nd} {nd}
O {3*nd} {3*nd} {3*nd}
O {2*nd} {2*nd} {3*nd}
O {4*nd} {4*nd} {5*nd}
    '''
    cell.basis = basis
    cell.pseudo = pseudo
    cell.output=f'NiO_{nd}.log'
    cell.verbose=lib.logger.INFO
    cell.precision=1e-12
    cell.exp_to_discard=0.1
    cell.spin=0
    cell.max_memory = maxMem
    cell.build()
    return cell

def get_gdf(cell, filename, restart=True):
    if not os.path.exists(filename) or restart:
        gdf = df.GDF(cell)
        gdf._cderi_to_save = filename
        gdf.build()
    return filename

def initguess(mol, mf, ao_label: list, activespacesize:int):
    '''
    Based on the ao_label find the orb which has
    highest character of that ao
    '''
    from pyscf.lo import orth
    baslst = mol.search_ao_label(ao_label)
    assert len(baslst) >=activespacesize
    orbindex=[]
    if len(mf.mo_coeff) > 1:
        mo_coeff = mf.mo_coeff[0]
    else:
        mo_coeff = mf.mo_coeff
    
    nkpts, nao = 1, mf.mo_coeff.shape[1]
    s_sc = mf.get_ovlp()
    orth_coeff = orth.orth_ao(mol, 'meta_lowdin',pre_orth_ao=None, s=s_sc)
    C = reduce(np.dot,(orth_coeff.T.conj(), s_sc, mf.mo_coeff))
    for orb in baslst:
        ao = C[orb]
        A = np.argsort(ao*ao.conj())[-activespacesize:][::-1]
        for element in A:
            if element not in orbindex:
                orbindex.append(element)
                break
    orbind = [x+1 for x in orbindex]
    return sorted(orbind[:activespacesize])

def runSCF(cell,nd=2.085, Restricted=True, Unrestricted=False):
    '''
    Run the Hartree Fock
    '''
    if Restricted:
        kmf = scf.ROHF(cell).density_fit()
    elif Unrestricted:
        kmf = scf.UHF(cell).density_fit()
    else:
        raise NotImplementedError

    kmf.max_cycle=100
    kmf.chkfile = f'NiO_{nd}.chk'
    kmf.init_guess='chk'
    kmf.with_df._cderi = get_gdf(cell, kmf.chkfile.rstrip('.chk')+'.h5', restart=False)
    kmf.exxdiv = None
    kmf.conv_tol = 1e-10
    kmf.kernel()

    if not kmf.converged:
        kmf.newton().run()

    assert kmf, "mean-field didn't converge"
    return kmf

def getfrags(nfrags: int):
    '''
    If NiO is in POSCAR Format where first N-atoms are Ni and
    next N-atoms are O, then get the frag atom no
    '''
    assert nfrags>=1, "You should know what you are doing"
    frags = []
    offset = nfrags * 2
    for i in range(nfrags):
        frag = [i * 2, i * 2 + offset, i * 2 + 1, i * 2 + offset + 1]
        frags.append(frag)
    return frags

def runLASSCF(cell, kmf):
    nfrags = 2
    ncas = 10 
    nelec = 16
    norb  = tuple([ncas,]*nfrags)
    nele  = tuple([nelec,]*nfrags)
    nspin = tuple([1,]*nfrags)

    orblst = initguess(cell, kmf, ao_label=['Ni 3d', ], activespacesize=sum(norb))

    frags = getfrags(nfrags)
    from mrh.my_pyscf.mcscf.lasscf_o0 import LASSCF
    las = LASSCF(kmf, norb, nele, spin_sub=nspin)
    sortedmo = las.sort_mo(orblst, kmf.mo_coeff)
    mo0 = las.localize_init_guess(frags, sortedmo)
    #mo0 = sortedmo
    molden.from_mo(cell, f'NiO.{nfrags}.las.molden', mo0[:, las.ncore:las.ncore+(ncas*nfrags)])
    las_weights,las_charges,las_spins,las_smults=genModelSpace(nfrags)
    las = las.state_average(las_weights,las_charges,las_spins,las_smults)
    elasci = las.lasci_(mo0)
    las.mo_coeff = mo0
    return las

# Model Space for the band gap
def genModelSpace(nfrags):
    las_charges = []
    las_spins = [] #2s
    las_smults = [] #2s+1

    las_charges += [[0]*nfrags]
    las_spins += [[0]*nfrags]
    las_smults += [[las_spins[0][0]+1]*nfrags]

    for i in range(nfrags):
        idxarr = np.eye(nfrags)[:,i].astype(int)
        las_charges += [list(idxarr)]
        spins = idxarr
        las_spins += [list(spins)]
        las_smults += [list(spins + 1)]

    for i in range(nfrags):
        idxarr = np.eye(nfrags)[:,i].astype(int)
        las_charges += [list(-idxarr)]
        spins = idxarr
        las_spins += [list(spins)]
        las_smults += [list(spins + 1)]

    nrootspaces = len(las_charges)
    las_weights = np.ones(nrootspaces)/nrootspaces
    return las_weights,las_charges,las_spins,las_smults

def processlas(las):
    from periodiclas.tools import sign_control, util
    las.ci = sign_control.fix_sign(las)
    las.dump_spaces()
    return las

def runLASSI(las):
    from mrh.my_pyscf.lassi import lassi
    lsi = lassi.LASSI(las)
    energies_lassi, civecs_lassi = lsi.kernel()
    return lsi, energies_lassi

def runLASSIPDFT(lsi, states=[0]):
    from mrh.my_pyscf import mcpdft
    mc = mcpdft.LASSI(lsi, 'tPBE', states=states)
    energies = mc.kernel()[0]
    return energies

def getBANDGAP(nele, lsi, energies_lassi):
    stateidx = [
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele - 1))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele + 1))[0]]
    stateidx = [list(x) for x in stateidx]
    ip = 27.21139*(min(energies_lassi[stateidx[1]]) - min(energies_lassi[stateidx[0]]))
    ea = 27.21139*(min(energies_lassi[stateidx[0]]) - min(energies_lassi[stateidx[2]]))
    return ip, ea

def getNatorbOcc(nele, lsi):
    from mrh.my_pyscf.lassi.lassi import root_make_rdm12s
    stateidx = [
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele - 1))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele + 1))[0]]
    stateidx = [int(list(x)[0]) for x in stateidx]
    for state in stateidx:
        natorb_casdm1 = root_make_rdm12s (lsi, lsi.ci, lsi.si, state=state, opt=lsi.opt)[0].sum (0)
        mo_occ = lsi._las.canonicalize (natorb_casdm1=natorb_casdm1)[2]
        mo_occ = [x for x in mo_occ if 0 < x < 2]
        print("State-",state, mo_occ)

def savepickel(mf, lsi, pdftenergy=0, R=2.47):
    """
    Save the LAS Band Structure Data
    """

    from periodiclas.tools import sign_control, util
    civec = lsi.get_sivec_vacuum_shuffle(state=0)
    charges = util.las_charges(lsi._las)

    data = {"energies_lassi":lsi.e_roots,
            "energies_lassipdft":pdftenergy,
            "civecs":civec,
            "charges":charges,
            "dist":R,
            "mf_coeff":mf.mo_coeff,
            "mf_occ":mf.mo_occ,
            "mf_ene":mf.mo_energy}


if __name__ == "__main__":
    for nd in np.arange(1.5, 3.6, 0.1):
        cell =  getCell(nd, maxMem=500000, basis='gth-dzvp-molopt-sr', pseudo='gth-pade')
        kmf = runSCF(cell, nd, Restricted=True, Unrestricted=False)

        las = runLASSCF(cell, kmf)
        las = processlas(las)

        lsi,energies_lassi = runLASSI(las)
        IP_LASSI, EA_LASSI = getBANDGAP(32, lsi,energies_lassi)
        energies_mcpdft = runLASSIPDFT(lsi, states=[x for x in range(len(energies_lassi))])
        IP_PDFT, EA_PDFT = getBANDGAP(32, lsi,np.asarray(energies_mcpdft))
        
        savepickel(kmf, lsi, pdftenergy=energies_mcpdft, R=nd)

        print("Results: LASSI ", )
        print("Ionization Energy: ", IP_LASSI)
        print("ElectAtt   Energy: ", EA_LASSI)
        print("Band Gap: ", IP_LASSI-EA_LASSI)

        print("Results: PDFT", )
        print("Ionization Energy: ", IP_PDFT)
        print("ElectAtt   Energy: ", EA_PDFT)
        print("Band Gap: ", IP_PDFT-EA_PDFT)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='midway3-0555.rcc.local', release='4.18.0-305.3.1.el8.x86_64', version='#1 SMP Tue Jun 1 16:14:33 UTC 2021', machine='x86_64')  Threads 128
Python 3.9.13 (main, Aug 25 2022, 23:26:10) 
[GCC 11.2.0]
numpy 1.26.2  scipy 1.11.4  h5py 3.10.0
Date: Sat Mar 15 00:28:39 2025
PySCF version 2.8.0
PySCF path  /home/jangidbhavnesh/bin/pyscf
GIT ORIG_HEAD a0665c4a7bf54e33f01295b3eea390be7a17d76d
GIT HEAD (branch master) 6f6d3741bf42543e02ccaa1d4ef43d9bf83b3dda
mrh path  /home/jangidbhavnesh/bin/mrh
GIT ORIG_HEAD ed1f605b415d72e71fb56d97b9d163809b62b172
GIT HEAD (branch master) ea89791c15c26abd3b0f0efdeadd7a286ca4585a

[ENV] PYSCF_EXT_PATH /home/jangidbhavnesh/bin/pyscf:/home/jangidbhavnesh/bin/pyscf-forge:/home/jangidbhavnesh/bin/dmrgscf:/home/jangidbhavnesh/bin:
[CONFIG] conf_file /home/jangidbhavnesh/.pyscf_conf.py
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 96
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ni     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 Ni     5.000000000000   5.000000000000   5.000000000000 AA    9.448630622825   9.448630622825   9.448630622825 Bohr   0.0
[INPUT]  3 Ni     2.500000000000   2.500000000000   5.000000000000 AA    4.724315311413   4.724315311413   9.448630622825 Bohr   0.0
[INPUT]  4 Ni     7.500000000000   7.500000000000  10.000000000000 AA   14.172945934238  14.172945934238  18.897261245651 Bohr   0.0
[INPUT]  5 O      2.500000000000   2.500000000000   2.500000000000 AA    4.724315311413   4.724315311413   4.724315311413 Bohr   0.0
[INPUT]  6 O      7.500000000000   7.500000000000   7.500000000000 AA   14.172945934238  14.172945934238  14.172945934238 Bohr   0.0
[INPUT]  7 O      5.000000000000   5.000000000000   7.500000000000 AA    9.448630622825   9.448630622825  14.172945934238 Bohr   0.0
[INPUT]  8 O     10.000000000000  10.000000000000  12.500000000000 AA   18.897261245651  18.897261245651  23.621576557063 Bohr   0.0

nuclear repulsion = -399.197031843348
number of shells = 28
number of NR pGTOs = 500
number of NR cGTOs = 156
basis = gth-dzvp-molopt-sr
ecp = {}
CPU time:    227479.78
lattice vectors  a1 [9.448630623, 4.724315311, 4.724315311]
                 a2 [4.724315311, 9.448630623, 4.724315311]
                 a3 [9.448630623, 9.448630623, 18.897261246]
dimension = 3
low_dim_ft_type = None
Cell volume = 843.542
exp_to_discard = 0.1
rcut = 21.840927745318478 (nimgs = [4 4 2])
lattice sum = 1919 cells
precision = 1e-12
pseudo = gth-pade
ke_cutoff = 1563.543132532536
    = [207 207 413] mesh (17696637 PWs)


******** <class 'pyscf.pbc.df.df.GDF'> ********
auxbasis = None
exp_to_discard = 0.1
_cderi_to_save = NiO_2.500000000000001.h5
len(kpts) = 1
ETB for O: l = 0, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 1, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 2, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 3, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 4, exps = 0.32498323008 * 2^n , n = 0..6
ETB for Ni: l = 0, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 1, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 2, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 3, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 4, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 5, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 6, exps = 0.689956484316 * 2^n , n = 0..4

WARN: Even tempered Gaussians are generated as DF auxbasis for  O Ni

Drop 0 primitive fitting functions
make aux basis, num shells = 280, num cGTOs = 1680
auxcell.rcut 14.405988831603228


******** <class 'pyscf.pbc.df.rsdf_builder._RSGDFBuilder'> ********
mesh = [13 13 25] (4225 PWs)
ke_cutoff = 5.306439780327548
omega = 0.2444957006238126
exclude_d_aux = True
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True


******** <class 'pyscf.pbc.scf.rohf.ROHF'> ********
method = ROHF
initial guess = chk
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-10
SCF conv_tol_grad = None
SCF max_cycles = 100
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = NiO_2.500000000000001.chk
max_memory 500000 MB (current use 17169 MB)
******** PBC SCF flags ********
kpt = [0. 0. 0.]
Exchange divergence treatment (exxdiv) = None
DF object = <pyscf.pbc.df.df.GDF object at 0x7f457c269f70>
number of electrons per cell  alpha = 48 beta = 48
Set gradient conv threshold to 1e-05

WARN: Fail in reading NiO_2.500000000000001.chk. Use MINAO initial guess



******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
init E= -720.222190637423

WARN: HOMO 0.752040999187557 >= LUMO 0.752040999187557

cycle= 1 E= -706.080869793001  delta_E= 14.1  |g|= 10.9  |ddm|= 5.77
  HOMO = 0.508342712966258  LUMO = 0.557491099288956
cycle= 2 E= -679.233955360375  delta_E= 26.8  |g|= 12.5  |ddm|= 9.88
  HOMO = 0.508932245309135  LUMO = 0.521950640168502
cycle= 3 E= -714.031167924092  delta_E= -34.8  |g|= 6.19  |ddm|= 8.67
  HOMO = 0.726385428070336  LUMO = 0.736729008591059
cycle= 4 E= -688.221539581629  delta_E= 25.8  |g|=   11  |ddm|= 6.48
  HOMO = 0.327617069627468  LUMO = 0.345070877780989
cycle= 5 E= -721.419711574121  delta_E= -33.2  |g|=  2.8  |ddm|= 6.14
  HOMO = 0.318547985702003  LUMO = 0.320549100232835
cycle= 6 E= -719.183912355185  delta_E= 2.24  |g|= 4.37  |ddm|= 2.97

WARN: HOMO 0.335923989984174 >= LUMO 0.336441298572866

cycle= 7 E= -721.819695168218  delta_E= -2.64  |g|= 2.37  |ddm|= 2.19
  HOMO = 0.323248924177906  LUMO = 0.377597145149218
cycle= 8 E= -723.368012421542  delta_E= -1.55  |g|= 0.915  |ddm|= 2.22
  HOMO = 0.316718095475016  LUMO = 0.486483466455293
cycle= 9 E= -723.426018270343  delta_E= -0.058  |g|= 0.926  |ddm|= 0.746
  HOMO = 0.297194841137508  LUMO = 0.504377080423281
cycle= 10 E= -723.474549724253  delta_E= -0.0485  |g|= 0.766  |ddm|= 0.318
  HOMO = 0.329851302234223  LUMO = 0.529308455809979
cycle= 11 E= -723.566942346364  delta_E= -0.0924  |g|= 0.208  |ddm|= 0.369
  HOMO = 0.324297743036045  LUMO = 0.512561187513798
cycle= 12 E= -723.572325876043  delta_E= -0.00538  |g|= 0.0846  |ddm|= 0.101
  HOMO = 0.327803860036784  LUMO = 0.514095216371755
cycle= 13 E= -723.573419781932  delta_E= -0.00109  |g|= 0.0433  |ddm|= 0.0469
  HOMO = 0.325641566544336  LUMO = 0.512605792376744
cycle= 14 E= -723.573694856471  delta_E= -0.000275  |g|= 0.0239  |ddm|= 0.0189
  HOMO = 0.325135562234834  LUMO = 0.511443045883749
cycle= 15 E= -723.573820066158  delta_E= -0.000125  |g|= 0.00679  |ddm|= 0.0161
  HOMO = 0.325101596639878  LUMO = 0.510858489785086
cycle= 16 E= -723.573844057657  delta_E= -2.4e-05  |g|= 0.00295  |ddm|= 0.00749
  HOMO = 0.325182559530731  LUMO = 0.510870328461046
cycle= 17 E= -723.573856262408  delta_E= -1.22e-05  |g|= 0.00282  |ddm|= 0.00452
  HOMO = 0.325196742284141  LUMO = 0.510864825507494
cycle= 18 E= -723.573876685053  delta_E= -2.04e-05  |g|= 0.00271  |ddm|= 0.00777
  HOMO = 0.325227137483654  LUMO = 0.511001931540705
cycle= 19 E= -723.574006554936  delta_E= -0.00013  |g|= 0.0024  |ddm|= 0.0587
  HOMO = 0.3252577090964  LUMO = 0.511165228508993
cycle= 20 E= -723.574075320244  delta_E= -6.88e-05  |g|= 0.00183  |ddm|= 0.043
  HOMO = 0.325213826160044  LUMO = 0.511283996181966
cycle= 21 E= -723.574134675624  delta_E= -5.94e-05  |g|= 0.00135  |ddm|= 0.0629
  HOMO = 0.325197660179718  LUMO = 0.510986799504653
cycle= 22 E= -723.574136465201  delta_E= -1.79e-06  |g|= 0.000776  |ddm|= 0.00273
  HOMO = 0.325149462353228  LUMO = 0.511030303319108
cycle= 23 E= -723.574147341109  delta_E= -1.09e-05  |g|= 0.00063  |ddm|= 0.0366
  HOMO = 0.325159910496265  LUMO = 0.510961418078189
cycle= 24 E= -723.574147679326  delta_E= -3.38e-07  |g|= 0.000231  |ddm|= 0.00487
  HOMO = 0.325156265627031  LUMO = 0.510908738933013
cycle= 25 E= -723.574147712663  delta_E= -3.33e-08  |g|= 0.000118  |ddm|= 0.000476
  HOMO = 0.325159229973446  LUMO = 0.510877952415637
cycle= 26 E= -723.574147732191  delta_E= -1.95e-08  |g|= 9.99e-05  |ddm|= 0.000402
  HOMO = 0.325158689137228  LUMO = 0.510888626015168
cycle= 27 E= -723.574147739409  delta_E= -7.22e-09  |g|= 9.02e-05  |ddm|= 0.000151
  HOMO = 0.325159894165095  LUMO = 0.510892064672151
cycle= 28 E= -723.574147761575  delta_E= -2.22e-08  |g|= 8.57e-05  |ddm|= 0.000291
  HOMO = 0.325160334294888  LUMO = 0.510893348601339
cycle= 29 E= -723.574147827699  delta_E= -6.61e-08  |g|= 8.02e-05  |ddm|= 0.00103
  HOMO = 0.32516117803628  LUMO = 0.510894254819183
cycle= 30 E= -723.574147910103  delta_E= -8.24e-08  |g|= 6.09e-05  |ddm|= 0.00134
  HOMO = 0.325160225173941  LUMO = 0.510893181488802
cycle= 31 E= -723.574148013887  delta_E= -1.04e-07  |g|= 2.47e-05  |ddm|= 0.00388
  HOMO = 0.325159525272271  LUMO = 0.510892597396515
cycle= 32 E= -723.574148016612  delta_E= -2.72e-09  |g|= 2.16e-05  |ddm|= 0.000355
  HOMO = 0.325159543511332  LUMO = 0.510892385803562
cycle= 33 E= -723.574148018483  delta_E= -1.87e-09  |g|= 2.07e-05  |ddm|= 0.000105
  HOMO = 0.325159705259916  LUMO = 0.51089253877141
cycle= 34 E= -723.57414802058  delta_E= -2.1e-09  |g|= 1.98e-05  |ddm|= 0.000117
  HOMO = 0.325159373277687  LUMO = 0.510892518845311
cycle= 35 E= -723.574148028992  delta_E= -8.41e-09  |g|= 1.14e-05  |ddm|= 0.000624
  HOMO = 0.32515995852686  LUMO = 0.51089227656443
cycle= 36 E= -723.574148032188  delta_E= -3.2e-09  |g|= 6.21e-06  |ddm|= 0.000497
  HOMO = 0.325159811963495  LUMO = 0.510892462854213
cycle= 37 E= -723.574148032625  delta_E= -4.37e-10  |g|= 1.2e-06  |ddm|= 0.000244
  HOMO = 0.325159763762677  LUMO = 0.510892302364874
cycle= 38 E= -723.574148032628  delta_E= -3.07e-12  |g|= 6.09e-07  |ddm|= 1.51e-05
  HOMO = 0.325159749568909  LUMO = 0.51089235511864
Extra cycle  E= -723.574148032628  delta_E=    0  |g|= 6.97e-07  |ddm|= 8.25e-07
converged SCF energy = -723.574148032628


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 2.991714e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 3.886350e-05 ; sigma = 1.447290e-09 ; 2/2 fragment CI solvers converged
Cycle 2: max grad = 3.293336e-07 ; sigma = 1.350031e-13 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 2 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 2.991712e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 2.649823e-04 ; sigma = 3.013187e-02 ; 1/2 fragment CI solvers converged
Cycle 2: max grad = 2.416813e-04 ; sigma = 5.696642e-05 ; 1/2 fragment CI solvers converged
Cycle 3: max grad = 1.169666e-05 ; sigma = 5.761737e-06 ; 1/2 fragment CI solvers converged
Cycle 4: max grad = 1.004087e-06 ; sigma = 5.075258e-09 ; 2/2 fragment CI solvers converged
Cycle 5: max grad = 9.224263e-07 ; sigma = 1.511324e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 5 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 2.991714e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 2.649294e-04 ; sigma = 3.013142e-02 ; 1/2 fragment CI solvers converged
Cycle 2: max grad = 2.418371e-04 ; sigma = 5.737747e-05 ; 1/2 fragment CI solvers converged
Cycle 3: max grad = 1.171034e-05 ; sigma = 5.797556e-06 ; 1/2 fragment CI solvers converged
Cycle 4: max grad = 1.095268e-06 ; sigma = 5.466404e-09 ; 2/2 fragment CI solvers converged
Cycle 5: max grad = 9.244892e-07 ; sigma = 1.506351e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 5 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 2.991712e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 2.893406e-04 ; sigma = 7.085819e-02 ; 2/2 fragment CI solvers converged
Cycle 2: max grad = 6.127757e-05 ; sigma = 1.713911e-05 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 6.019851e-06 ; sigma = 3.516855e-07 ; 2/2 fragment CI solvers converged
Cycle 4: max grad = 1.244245e-06 ; sigma = 7.142852e-09 ; 2/2 fragment CI solvers converged
Cycle 5: max grad = 1.222678e-07 ; sigma = 1.450999e-10 ; 2/2 fragment CI solvers converged
Cycle 6: max grad = 2.526421e-08 ; sigma = 3.041123e-12 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 6 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 2.991714e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 2.893405e-04 ; sigma = 7.085818e-02 ; 2/2 fragment CI solvers converged
Cycle 2: max grad = 6.127763e-05 ; sigma = 1.713911e-05 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 6.019847e-06 ; sigma = 3.516854e-07 ; 2/2 fragment CI solvers converged
Cycle 4: max grad = 1.244246e-06 ; sigma = 7.142894e-09 ; 2/2 fragment CI solvers converged
Cycle 5: max grad = 1.222676e-07 ; sigma = 1.449934e-10 ; 2/2 fragment CI solvers converged
Cycle 6: max grad = 2.526421e-08 ; sigma = 3.048228e-12 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 6 cycles
LASCI state-average energy = -723.588066185767
LASCI state 0 energy = -723.824831040908
LASCI state 1 energy = -723.809502544214
LASCI state 2 energy = -723.809502553582
LASCI state 3 energy = -723.248247397162
LASCI state 4 energy = -723.248247392968
******** LAS space tables ********
LAS space 0: (16e+16e,20o) wfynsm=A
Converged? True
E(LAS) = -723.824831040908
S^2 = 0.0000000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+8e,10o)     1    A        1
    1   (8e+8e,10o)     1    A        1
LAS space 1: (16e+15e,20o) wfynsm=A
Converged? True
E(LAS) = -723.809502544214
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+7e,10o)     2    A        1
    1   (8e+8e,10o)     1    A        1
LAS space 2: (16e+15e,20o) wfynsm=A
Converged? True
E(LAS) = -723.809502553582
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+8e,10o)     1    A        1
    1   (8e+7e,10o)     2    A        1
LAS space 3: (17e+16e,20o) wfynsm=A
Converged? True
E(LAS) = -723.248247397162
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (9e+8e,10o)     2    A        1
    1   (8e+8e,10o)     1    A        1
LAS space 4: (17e+16e,20o) wfynsm=A
Converged? True
E(LAS) = -723.248247392968
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+8e,10o)     1    A        1
    1   (9e+8e,10o)     2    A        1
LASSI op_o0 memory check: 1709.058096 MB needed of 481678.493696 MB available (500000 MB max)


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
Symmetry analysis of 5 LAS rootspaces:
 ix            Energy  <S**2>  Neleca  Nelecb  Nelec   Wfnsym
  0   -723.8248310409   0.000      16      16      32       A
  1   -723.8095025442   0.750      16      15      31       A
  2   -723.8095025536   0.750      16      15      31       A
  3   -723.2482473972   0.750      17      16      33       A
  4   -723.2482473930   0.750      17      16      33       A
Build + diag H matrix LASSI symmetry block 0
['neleca', 'nelecb', 'irrep'] = (17, 16, 0)
(2 rootspaces; 2 states)
LASSI op_o0 memory check: 123.54336 MB needed of 481626.396672 MB available (500000 MB max)
2/2 linearly independent model states
Build + diag H matrix LASSI symmetry block 1
['neleca', 'nelecb', 'irrep'] = (16, 15, 0)
(2 rootspaces; 2 states)
LASSI op_o0 memory check: 1652.196096 MB needed of 481626.396672 MB available (500000 MB max)
2/2 linearly independent model states
Build + diag H matrix LASSI symmetry block 2
['neleca', 'nelecb', 'irrep'] = (16, 16, 0)
(1 rootspaces; 1 states)
LASSI eigenvalues (5 total):
 ix            Energy  <S**2>  Neleca  Nelecb  Wfnsym
  0   -723.8248310409   0.000      16      16       A
  1   -723.8095296202   0.750      16      15       A
  2   -723.8094754776   0.750      16      15       A
  3   -723.2482483607   0.750      17      16       A
  4   -723.2482464294   0.750      17      16       A
Building tPBE functional
Building tPBE functional
Periodic OT-FNAL class is used
LASSI op_o0 memory check: 1709.058096 MB needed of 481626.396672 MB available (500000 MB max)


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 0 E = -741.2947767068689, Eot(tPBE) = -81.41573942282174


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 1 E = -741.2581922908782, Eot(tPBE) = -80.30165486788934


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 2 E = -741.2581365406667, Eot(tPBE) = -80.30171737732174


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 3 E = -741.1327315949303, Eot(tPBE) = -82.41166872104654


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [23 23 45] (23805 PWs)
ke_cutoff = 17.83553370610092
omega = 0.45721335302086696
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 4 E = -741.1327299740849, Eot(tPBE) = -82.41167061587565

Discarded 16 diffused primitive functions, 0 contracted functions
#INFO: **** input file is /project/lgagliardi/jangidbhavnesh/Re/Final/MottTransition/NewGeometry/NiO.py ****
import os, sys
import shutil
import numpy as np
import scipy.linalg as la
from pyscf.pbc import scf, gto, df, dft, tools
from pyscf.tools import molden
from pyscf import mcpdft, lib, mcscf
from pyscf.mcscf import avas,project_init_guess
from pyscf import mcscf, dmrgscf
from functools import reduce
from pyscf import __config__
from pyscf.pbc.tools import k2gamma
# Import mcpdft from mrh
from mrh.my_pyscf import mcpdft
from pyscf.tools import molden
pre_orth_method = getattr(__config__, 'pbc_scf_analyze_pre_orth_method', 'ANO')

def getCell(nd=2.085, spin=0, maxMem=200000, basis='def2SVP', pseudo=None):
    cell = gto.Cell()
    cell.a = [[2*nd, nd, nd], [nd, 2*nd, nd], [2*nd, 2*nd, 4*nd]]
    cell.atom= f'''
Ni 0 0 0
Ni {2*nd} {2*nd} {2*nd}
Ni {nd} {nd} {2*nd}
Ni {3*nd} {3*nd} {4*nd}
O {nd} {nd} {nd}
O {3*nd} {3*nd} {3*nd}
O {2*nd} {2*nd} {3*nd}
O {4*nd} {4*nd} {5*nd}
    '''
    cell.basis = basis
    cell.pseudo = pseudo
    cell.output=f'NiO_{nd}.log'
    cell.verbose=lib.logger.INFO
    cell.precision=1e-12
    cell.exp_to_discard=0.1
    cell.spin=0
    cell.max_memory = maxMem
    cell.build()
    return cell

def get_gdf(cell, filename, restart=True):
    if not os.path.exists(filename) or restart:
        gdf = df.GDF(cell)
        gdf._cderi_to_save = filename
        gdf.build()
    return filename

def initguess(mol, mf, ao_label: list, activespacesize:int):
    '''
    Based on the ao_label find the orb which has
    highest character of that ao
    '''
    from pyscf.lo import orth
    baslst = mol.search_ao_label(ao_label)
    assert len(baslst) >=activespacesize
    orbindex=[]
    if len(mf.mo_coeff) > 1:
        mo_coeff = mf.mo_coeff[0]
    else:
        mo_coeff = mf.mo_coeff
    
    nkpts, nao = 1, mf.mo_coeff.shape[1]
    s_sc = mf.get_ovlp()
    orth_coeff = orth.orth_ao(mol, 'meta_lowdin',pre_orth_ao=None, s=s_sc)
    C = reduce(np.dot,(orth_coeff.T.conj(), s_sc, mf.mo_coeff))
    for orb in baslst:
        ao = C[orb]
        A = np.argsort(ao*ao.conj())[-activespacesize:][::-1]
        for element in A:
            if element not in orbindex:
                orbindex.append(element)
                break
    orbind = [x+1 for x in orbindex]
    return sorted(orbind[:activespacesize])

def runSCF(cell,nd=2.085, Restricted=True, Unrestricted=False):
    '''
    Run the Hartree Fock
    '''
    if Restricted:
        kmf = scf.ROHF(cell).density_fit()
    elif Unrestricted:
        kmf = scf.UHF(cell).density_fit()
    else:
        raise NotImplementedError

    kmf.max_cycle=100
    kmf.chkfile = f'NiO_{nd}.chk'
    kmf.init_guess='chk'
    kmf.with_df._cderi = get_gdf(cell, kmf.chkfile.rstrip('.chk')+'.h5', restart=False)
    kmf.exxdiv = None
    kmf.conv_tol = 1e-10
    kmf.kernel()

    if not kmf.converged:
        kmf.newton().run()

    assert kmf, "mean-field didn't converge"
    return kmf

def getfrags(nfrags: int):
    '''
    If NiO is in POSCAR Format where first N-atoms are Ni and
    next N-atoms are O, then get the frag atom no
    '''
    assert nfrags>=1, "You should know what you are doing"
    frags = []
    offset = nfrags * 2
    for i in range(nfrags):
        frag = [i * 2, i * 2 + offset, i * 2 + 1, i * 2 + offset + 1]
        frags.append(frag)
    return frags

def runLASSCF(cell, kmf):
    nfrags = 2
    ncas = 10 
    nelec = 16
    norb  = tuple([ncas,]*nfrags)
    nele  = tuple([nelec,]*nfrags)
    nspin = tuple([1,]*nfrags)

    orblst = initguess(cell, kmf, ao_label=['Ni 3d', ], activespacesize=sum(norb))

    frags = getfrags(nfrags)
    from mrh.my_pyscf.mcscf.lasscf_o0 import LASSCF
    las = LASSCF(kmf, norb, nele, spin_sub=nspin)
    sortedmo = las.sort_mo(orblst, kmf.mo_coeff)
    mo0 = las.localize_init_guess(frags, sortedmo)
    #mo0 = sortedmo
    molden.from_mo(cell, f'NiO.{nfrags}.las.molden', mo0[:, las.ncore:las.ncore+(ncas*nfrags)])
    las_weights,las_charges,las_spins,las_smults=genModelSpace(nfrags)
    las = las.state_average(las_weights,las_charges,las_spins,las_smults)
    elasci = las.lasci_(mo0)
    las.mo_coeff = mo0
    return las

# Model Space for the band gap
def genModelSpace(nfrags):
    las_charges = []
    las_spins = [] #2s
    las_smults = [] #2s+1

    las_charges += [[0]*nfrags]
    las_spins += [[0]*nfrags]
    las_smults += [[las_spins[0][0]+1]*nfrags]

    for i in range(nfrags):
        idxarr = np.eye(nfrags)[:,i].astype(int)
        las_charges += [list(idxarr)]
        spins = idxarr
        las_spins += [list(spins)]
        las_smults += [list(spins + 1)]

    for i in range(nfrags):
        idxarr = np.eye(nfrags)[:,i].astype(int)
        las_charges += [list(-idxarr)]
        spins = idxarr
        las_spins += [list(spins)]
        las_smults += [list(spins + 1)]

    nrootspaces = len(las_charges)
    las_weights = np.ones(nrootspaces)/nrootspaces
    return las_weights,las_charges,las_spins,las_smults

def processlas(las):
    from periodiclas.tools import sign_control, util
    las.ci = sign_control.fix_sign(las)
    las.dump_spaces()
    return las

def runLASSI(las):
    from mrh.my_pyscf.lassi import lassi
    lsi = lassi.LASSI(las)
    energies_lassi, civecs_lassi = lsi.kernel()
    return lsi, energies_lassi

def runLASSIPDFT(lsi, states=[0]):
    from mrh.my_pyscf import mcpdft
    mc = mcpdft.LASSI(lsi, 'tPBE', states=states)
    energies = mc.kernel()[0]
    return energies

def getBANDGAP(nele, lsi, energies_lassi):
    stateidx = [
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele - 1))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele + 1))[0]]
    stateidx = [list(x) for x in stateidx]
    ip = 27.21139*(min(energies_lassi[stateidx[1]]) - min(energies_lassi[stateidx[0]]))
    ea = 27.21139*(min(energies_lassi[stateidx[0]]) - min(energies_lassi[stateidx[2]]))
    return ip, ea

def getNatorbOcc(nele, lsi):
    from mrh.my_pyscf.lassi.lassi import root_make_rdm12s
    stateidx = [
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele - 1))[0],
        np.where((np.asarray(lsi.rootsym)[:, :2].sum(axis=1) == nele + 1))[0]]
    stateidx = [int(list(x)[0]) for x in stateidx]
    for state in stateidx:
        natorb_casdm1 = root_make_rdm12s (lsi, lsi.ci, lsi.si, state=state, opt=lsi.opt)[0].sum (0)
        mo_occ = lsi._las.canonicalize (natorb_casdm1=natorb_casdm1)[2]
        mo_occ = [x for x in mo_occ if 0 < x < 2]
        print("State-",state, mo_occ)

def savepickel(mf, lsi, pdftenergy=0, R=2.47):
    """
    Save the LAS Band Structure Data
    """

    from periodiclas.tools import sign_control, util
    civec = lsi.get_sivec_vacuum_shuffle(state=0)
    charges = util.las_charges(lsi._las)

    data = {"energies_lassi":lsi.e_roots,
            "energies_lassipdft":pdftenergy,
            "civecs":civec,
            "charges":charges,
            "dist":R,
            "mf_coeff":mf.mo_coeff,
            "mf_occ":mf.mo_occ,
            "mf_ene":mf.mo_energy}


if __name__ == "__main__":
    for nd in np.arange(1.5, 3.6, 0.1):
        cell =  getCell(nd, maxMem=500000, basis='gth-dzvp-molopt-sr', pseudo='gth-pade')
        kmf = runSCF(cell, nd, Restricted=True, Unrestricted=False)

        las = runLASSCF(cell, kmf)
        las = processlas(las)

        lsi,energies_lassi = runLASSI(las)
        IP_LASSI, EA_LASSI = getBANDGAP(32, lsi,energies_lassi)
        energies_mcpdft = runLASSIPDFT(lsi, states=[x for x in range(len(energies_lassi))])
        IP_PDFT, EA_PDFT = getBANDGAP(32, lsi,np.asarray(energies_mcpdft))
        
        savepickel(kmf, lsi, pdftenergy=energies_mcpdft, R=nd)

        print("Results: LASSI ", )
        print("Ionization Energy: ", IP_LASSI)
        print("ElectAtt   Energy: ", EA_LASSI)
        print("Band Gap: ", IP_LASSI-EA_LASSI)

        print("Results: PDFT", )
        print("Ionization Energy: ", IP_PDFT)
        print("ElectAtt   Energy: ", EA_PDFT)
        print("Band Gap: ", IP_PDFT-EA_PDFT)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='midway3-0555.rcc.local', release='4.18.0-305.3.1.el8.x86_64', version='#1 SMP Tue Jun 1 16:14:33 UTC 2021', machine='x86_64')  Threads 128
Python 3.9.13 (main, Aug 25 2022, 23:26:10) 
[GCC 11.2.0]
numpy 1.26.2  scipy 1.11.4  h5py 3.10.0
Date: Sat Mar 15 00:22:51 2025
PySCF version 2.8.0
PySCF path  /home/jangidbhavnesh/bin/pyscf
GIT ORIG_HEAD a0665c4a7bf54e33f01295b3eea390be7a17d76d
GIT HEAD (branch master) 6f6d3741bf42543e02ccaa1d4ef43d9bf83b3dda
mrh path  /home/jangidbhavnesh/bin/mrh
GIT ORIG_HEAD ed1f605b415d72e71fb56d97b9d163809b62b172
GIT HEAD (branch master) ea89791c15c26abd3b0f0efdeadd7a286ca4585a

[ENV] PYSCF_EXT_PATH /home/jangidbhavnesh/bin/pyscf:/home/jangidbhavnesh/bin/pyscf-forge:/home/jangidbhavnesh/bin/dmrgscf:/home/jangidbhavnesh/bin:
[CONFIG] conf_file /home/jangidbhavnesh/.pyscf_conf.py
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 96
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ni     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 Ni     4.600000000000   4.600000000000   4.600000000000 AA    8.692740172999   8.692740172999   8.692740172999 Bohr   0.0
[INPUT]  3 Ni     2.300000000000   2.300000000000   4.600000000000 AA    4.346370086500   4.346370086500   8.692740172999 Bohr   0.0
[INPUT]  4 Ni     6.900000000000   6.900000000000   9.200000000000 AA   13.039110259499  13.039110259499  17.385480345999 Bohr   0.0
[INPUT]  5 O      2.300000000000   2.300000000000   2.300000000000 AA    4.346370086500   4.346370086500   4.346370086500 Bohr   0.0
[INPUT]  6 O      6.900000000000   6.900000000000   6.900000000000 AA   13.039110259499  13.039110259499  13.039110259499 Bohr   0.0
[INPUT]  7 O      4.600000000000   4.600000000000   6.900000000000 AA    8.692740172999   8.692740172999  13.039110259499 Bohr   0.0
[INPUT]  8 O      9.200000000000   9.200000000000  11.500000000000 AA   17.385480345999  17.385480345999  21.731850432498 Bohr   0.0

nuclear repulsion = -433.90981722103
number of shells = 28
number of NR pGTOs = 500
number of NR cGTOs = 156
basis = gth-dzvp-molopt-sr
ecp = {}
CPU time:    192794.67
lattice vectors  a1 [8.692740173, 4.346370086, 4.346370086]
                 a2 [4.346370086, 8.692740173, 4.346370086]
                 a3 [8.692740173, 8.692740173, 17.385480346]
dimension = 3
low_dim_ft_type = None
Cell volume = 656.856
exp_to_discard = 0.1
rcut = 21.840927745318478 (nimgs = [5 5 3])
lattice sum = 2003 cells
precision = 1e-12
pseudo = gth-pade
ke_cutoff = 1563.543132532536
    = [191 191 381] mesh (13899261 PWs)


******** <class 'pyscf.pbc.df.df.GDF'> ********
auxbasis = None
exp_to_discard = 0.1
_cderi_to_save = NiO_2.3000000000000007.h5
len(kpts) = 1
ETB for O: l = 0, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 1, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 2, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 3, exps = 0.32498323008 * 2^n , n = 0..6
ETB for O: l = 4, exps = 0.32498323008 * 2^n , n = 0..6
ETB for Ni: l = 0, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 1, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 2, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 3, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 4, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 5, exps = 0.689956484316 * 2^n , n = 0..4
ETB for Ni: l = 6, exps = 0.689956484316 * 2^n , n = 0..4

WARN: Even tempered Gaussians are generated as DF auxbasis for  O Ni

Drop 0 primitive fitting functions
make aux basis, num shells = 280, num cGTOs = 1680
auxcell.rcut 14.405988831603228


******** <class 'pyscf.pbc.df.rsdf_builder._RSGDFBuilder'> ********
mesh = [13 13 23] (3887 PWs)
ke_cutoff = 5.268056978408831
omega = 0.2436696360142079
exclude_d_aux = True
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True


******** <class 'pyscf.pbc.scf.rohf.ROHF'> ********
method = ROHF
initial guess = chk
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-10
SCF conv_tol_grad = None
SCF max_cycles = 100
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = NiO_2.3000000000000007.chk
max_memory 500000 MB (current use 14757 MB)
******** PBC SCF flags ********
kpt = [0. 0. 0.]
Exchange divergence treatment (exxdiv) = None
DF object = <pyscf.pbc.df.df.GDF object at 0x7f457c2697f0>
number of electrons per cell  alpha = 48 beta = 48
Set gradient conv threshold to 1e-05

WARN: Fail in reading NiO_2.3000000000000007.chk. Use MINAO initial guess



******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
init E= -719.397002284893

WARN: HOMO 0.874159719074275 >= LUMO 0.874159719074376

cycle= 1 E= -705.565868577844  delta_E= 13.8  |g|= 11.1  |ddm|= 5.74
  HOMO = 0.678559001411785  LUMO = 0.691426838953637
cycle= 2 E= -681.51233964845  delta_E= 24.1  |g|= 12.8  |ddm|= 9.73
  HOMO = 0.567688458974739  LUMO = 0.636738880345663
cycle= 3 E= -714.928063591855  delta_E= -33.4  |g|= 5.67  |ddm|= 8.25
  HOMO = 0.862493216550511  LUMO = 0.878818220888148
cycle= 4 E= -676.012142630318  delta_E= 38.9  |g|= 12.5  |ddm|= 6.86
  HOMO = 0.45170208772706  LUMO = 0.475155923124323
cycle= 5 E= -719.653406039433  delta_E= -43.6  |g|= 3.77  |ddm|=  6.1
  HOMO = 0.450051251411757  LUMO = 0.527582204503062
cycle= 6 E= -718.598255064012  delta_E= 1.06  |g|=  4.3  |ddm|= 1.79
  HOMO = 0.448425905771073  LUMO = 0.527779826528156
cycle= 7 E= -718.529607732009  delta_E= 0.0686  |g|= 4.34  |ddm|= 0.0292
  HOMO = 0.459598423178482  LUMO = 0.495052562972919
cycle= 8 E= -719.432142616856  delta_E= -0.903  |g|= 3.77  |ddm|= 0.442
  HOMO = 0.465422635719607  LUMO = 0.49546110304516
cycle= 9 E= -719.572217604254  delta_E= -0.14  |g|= 3.68  |ddm|= 0.284
  HOMO = 0.469561433031653  LUMO = 0.497321624203912
cycle= 10 E= -719.684856344142  delta_E= -0.113  |g|= 3.59  |ddm|= 0.283
  HOMO = 0.484675515273541  LUMO = 0.48885385617906
cycle= 11 E= -721.424697183221  delta_E= -1.74  |g|= 2.09  |ddm|= 2.32
  HOMO = 0.533299775283408  LUMO = 0.541246264910104
cycle= 12 E= -719.865430368797  delta_E= 1.56  |g|= 3.81  |ddm|= 3.23
  HOMO = 0.445112989207274  LUMO = 0.558014839965388
cycle= 13 E= -722.586041708089  delta_E= -2.72  |g|= 0.885  |ddm|= 2.42
  HOMO = 0.42210015720934  LUMO = 0.562127946015038
cycle= 14 E= -722.65066576136  delta_E= -0.0646  |g|= 0.667  |ddm|= 0.683
  HOMO = 0.410931368122377  LUMO = 0.644072091127827
cycle= 15 E= -722.728556080659  delta_E= -0.0779  |g|= 0.324  |ddm|= 0.449
  HOMO = 0.419511012967398  LUMO = 0.681899444552936
cycle= 16 E= -722.745266290406  delta_E= -0.0167  |g|= 0.133  |ddm|= 0.193
  HOMO = 0.415377873630246  LUMO = 0.68473760181323
cycle= 17 E= -722.747486235619  delta_E= -0.00222  |g|= 0.0744  |ddm|= 0.0592
  HOMO = 0.417003351916721  LUMO = 0.68692713660299
cycle= 18 E= -722.748841112129  delta_E= -0.00135  |g|= 0.0267  |ddm|= 0.0521
  HOMO = 0.415934124846038  LUMO = 0.685593051130106
cycle= 19 E= -722.749249029379  delta_E= -0.000408  |g|= 0.0137  |ddm|= 0.0301
  HOMO = 0.416270907994846  LUMO = 0.685999055908335
cycle= 20 E= -722.749501871206  delta_E= -0.000253  |g|= 0.012  |ddm|= 0.0223
  HOMO = 0.416018631233858  LUMO = 0.685996402832628
cycle= 21 E= -722.749956996124  delta_E= -0.000455  |g|= 0.0112  |ddm|= 0.0435
  HOMO = 0.416220131306276  LUMO = 0.686474277753325
cycle= 22 E= -722.751005627228  delta_E= -0.00105  |g|= 0.00835  |ddm|= 0.122
  HOMO = 0.416295467787188  LUMO = 0.687666714826259
cycle= 23 E= -722.751916912343  delta_E= -0.000911  |g|= 0.00654  |ddm|= 0.189
  HOMO = 0.416337767954587  LUMO = 0.687394078577649
cycle= 24 E= -722.751921624914  delta_E= -4.71e-06  |g|= 0.0058  |ddm|= 0.00178
  HOMO = 0.416433645379454  LUMO = 0.686710358088894
cycle= 25 E= -722.7520737845  delta_E= -0.000152  |g|= 0.00378  |ddm|= 0.0732
  HOMO = 0.416475936684125  LUMO = 0.686361004970203
cycle= 26 E= -722.752091262515  delta_E= -1.75e-05  |g|= 0.00291  |ddm|= 0.0103
  HOMO = 0.416542667412236  LUMO = 0.685699397068634
cycle= 27 E= -722.752116297236  delta_E= -2.5e-05  |g|= 0.00286  |ddm|= 0.0126
  HOMO = 0.416527329958363  LUMO = 0.685531012522388
cycle= 28 E= -722.752153464401  delta_E= -3.72e-05  |g|= 0.00274  |ddm|= 0.023
  HOMO = 0.416401212096003  LUMO = 0.68613338523574
cycle= 29 E= -722.752182677713  delta_E= -2.92e-05  |g|= 0.00117  |ddm|= 0.0287
  HOMO = 0.416429245507446  LUMO = 0.686021283542659
cycle= 30 E= -722.752191185344  delta_E= -8.51e-06  |g|= 0.000511  |ddm|= 0.0191
  HOMO = 0.416450236914579  LUMO = 0.685986086575833
cycle= 31 E= -722.752191828514  delta_E= -6.43e-07  |g|= 0.00015  |ddm|= 0.00489
  HOMO = 0.416457776660386  LUMO = 0.685997600491205
cycle= 32 E= -722.752191855672  delta_E= -2.72e-08  |g|= 0.000117  |ddm|= 0.000937
  HOMO = 0.416457920206521  LUMO = 0.685999579626606
cycle= 33 E= -722.752191860218  delta_E= -4.55e-09  |g|= 3.48e-05  |ddm|= 0.000284
  HOMO = 0.416457174691141  LUMO = 0.686003417097679
cycle= 34 E= -722.752191860695  delta_E= -4.77e-10  |g|= 1.99e-05  |ddm|= 4.62e-05
  HOMO = 0.416457469871438  LUMO = 0.686003537152741
cycle= 35 E= -722.752191861064  delta_E= -3.69e-10  |g|= 1.74e-05  |ddm|= 2.83e-05
  HOMO = 0.416457367746176  LUMO = 0.686004136105539
cycle= 36 E= -722.752191861479  delta_E= -4.16e-10  |g|= 1.6e-05  |ddm|= 5.7e-05
  HOMO = 0.416457296678504  LUMO = 0.686004187108629
cycle= 37 E= -722.752191862382  delta_E= -9.03e-10  |g|= 1.47e-05  |ddm|= 6.77e-05
  HOMO = 0.416457050443119  LUMO = 0.686003753198107
cycle= 38 E= -722.752191864404  delta_E= -2.02e-09  |g|= 1.19e-05  |ddm|= 0.000213
  HOMO = 0.416456920406993  LUMO = 0.686004359524257
cycle= 39 E= -722.752191865565  delta_E= -1.16e-09  |g|= 8.28e-06  |ddm|= 0.000194
  HOMO = 0.416456967893661  LUMO = 0.686004138186603
cycle= 40 E= -722.752191865941  delta_E= -3.76e-10  |g|= 6.24e-06  |ddm|= 0.00011
  HOMO = 0.416456932750983  LUMO = 0.686004112556197
cycle= 41 E= -722.752191866158  delta_E= -2.17e-10  |g|= 5.52e-06  |ddm|= 5.04e-05
  HOMO = 0.416457110436121  LUMO = 0.686004180205617
cycle= 42 E= -722.752191866334  delta_E= -1.76e-10  |g|= 4.96e-06  |ddm|= 4.44e-05
  HOMO = 0.416457272805356  LUMO = 0.686004102537302
cycle= 43 E= -722.752191866531  delta_E= -1.97e-10  |g|= 3.09e-06  |ddm|= 7.45e-05
  HOMO = 0.416457255893022  LUMO = 0.686004145087088
cycle= 44 E= -722.752191866594  delta_E= -6.32e-11  |g|= 1.25e-06  |ddm|= 5.22e-05
  HOMO = 0.416457292425766  LUMO = 0.686004031460802
Extra cycle  E= -722.752191866594  delta_E= -2.27e-13  |g|= 1.51e-06  |ddm|= 1.83e-06
converged SCF energy = -722.752191866594


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 4.561487e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 1.028299e-04 ; sigma = 3.312664e-08 ; 2/2 fragment CI solvers converged
Cycle 2: max grad = 5.247931e-07 ; sigma = 2.359002e-12 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 2 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 9.854721e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 4.684934e-04 ; sigma = 1.369428e-02 ; 1/2 fragment CI solvers converged
Cycle 2: max grad = 2.196980e-05 ; sigma = 9.034515e-06 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 1.590165e-06 ; sigma = 2.198576e-08 ; 2/2 fragment CI solvers converged
Cycle 4: max grad = 2.122544e-06 ; sigma = 1.275424e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 4 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 9.854655e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 4.684925e-04 ; sigma = 1.369445e-02 ; 1/2 fragment CI solvers converged
Cycle 2: max grad = 2.196954e-05 ; sigma = 9.034339e-06 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 1.589953e-06 ; sigma = 2.198517e-08 ; 2/2 fragment CI solvers converged
Cycle 4: max grad = 2.122292e-06 ; sigma = 1.274714e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 4 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 7.518638e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 2.160677e-04 ; sigma = 4.931851e-02 ; 2/2 fragment CI solvers converged
Cycle 2: max grad = 4.664307e-07 ; sigma = 9.259479e-07 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 3.698379e-09 ; sigma = 1.494982e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 3 cycles
Entering product-state fixed-point CI iteration
Cycle 0: max grad = 7.518650e-02 ; sigma = 0.000000e+00 ; 0/2 fragment CI solvers converged
Cycle 1: max grad = 2.160677e-04 ; sigma = 4.931855e-02 ; 2/2 fragment CI solvers converged
Cycle 2: max grad = 4.664315e-07 ; sigma = 9.259471e-07 ; 2/2 fragment CI solvers converged
Cycle 3: max grad = 3.698350e-09 ; sigma = 1.503508e-11 ; 2/2 fragment CI solvers converged
Product_state fixed-point CI iteration converged after 3 cycles
LASCI state-average energy = -722.60192357235
LASCI state 0 energy = -722.813387695342
LASCI state 1 energy = -722.985557456634
LASCI state 2 energy = -722.985557524441
LASCI state 3 energy = -722.112557634523
LASCI state 4 energy = -722.112557550809
******** LAS space tables ********
LAS space 0: (16e+16e,20o) wfynsm=A
Converged? True
E(LAS) = -722.813387695342
S^2 = 0.0000000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+8e,10o)     1    A        1
    1   (8e+8e,10o)     1    A        1
LAS space 1: (16e+15e,20o) wfynsm=A
Converged? True
E(LAS) = -722.985557456634
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+7e,10o)     2    A        1
    1   (8e+8e,10o)     1    A        1
LAS space 2: (16e+15e,20o) wfynsm=A
Converged? True
E(LAS) = -722.985557524441
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+8e,10o)     1    A        1
    1   (8e+7e,10o)     2    A        1
LAS space 3: (17e+16e,20o) wfynsm=A
Converged? True
E(LAS) = -722.112557634523
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (9e+8e,10o)     2    A        1
    1   (8e+8e,10o)     1    A        1
LAS space 4: (17e+16e,20o) wfynsm=A
Converged? True
E(LAS) = -722.112557550809
S^2 = 0.7500000 (Pure)
Space table
 frag    (ae+be,no)  2S+1   ir   lroots
    0   (8e+8e,10o)     1    A        1
    1   (9e+8e,10o)     2    A        1
LASSI op_o0 memory check: 1709.058096 MB needed of 484084.31616 MB available (500000 MB max)


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
Symmetry analysis of 5 LAS rootspaces:
 ix            Energy  <S**2>  Neleca  Nelecb  Nelec   Wfnsym
  0   -722.8133876953   0.000      16      16      32       A
  1   -722.9855574566   0.750      16      15      31       A
  2   -722.9855575244   0.750      16      15      31       A
  3   -722.1125576345   0.750      17      16      33       A
  4   -722.1125575508   0.750      17      16      33       A
Build + diag H matrix LASSI symmetry block 0
['neleca', 'nelecb', 'irrep'] = (17, 16, 0)
(2 rootspaces; 2 states)
LASSI op_o0 memory check: 123.54336 MB needed of 484033.509376 MB available (500000 MB max)
2/2 linearly independent model states
Build + diag H matrix LASSI symmetry block 1
['neleca', 'nelecb', 'irrep'] = (16, 15, 0)
(2 rootspaces; 2 states)
LASSI op_o0 memory check: 1652.196096 MB needed of 484033.509376 MB available (500000 MB max)
2/2 linearly independent model states
Build + diag H matrix LASSI symmetry block 2
['neleca', 'nelecb', 'irrep'] = (16, 16, 0)
(1 rootspaces; 1 states)
LASSI eigenvalues (5 total):
 ix            Energy  <S**2>  Neleca  Nelecb  Wfnsym
  0   -722.9891572371   0.750      16      15       A
  1   -722.9819577440   0.750      16      15       A
  2   -722.8133876953   0.000      16      16       A
  3   -722.1125654626   0.750      17      16       A
  4   -722.1125497228   0.750      17      16       A
Building tPBE functional
Building tPBE functional
Periodic OT-FNAL class is used
LASSI op_o0 memory check: 1709.058096 MB needed of 484033.509376 MB available (500000 MB max)


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 0 E = -741.567897795485, Eot(tPBE) = -80.74538992397156


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 1 E = -741.5617257200366, Eot(tPBE) = -80.75000287782868


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 2 E = -741.4382168785717, Eot(tPBE) = -81.84332964808986


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 3 E = -741.06041529395, Eot(tPBE) = -82.78554937919647


******** <class 'pyscf.pbc.df.rsdf_builder._RSNucBuilder'> ********
mesh = [21 21 41] (18081 PWs)
ke_cutoff = 17.415064391434147
omega = 0.45198146599207717
exclude_d_aux = False
exclude_dd_block = True
j2c_eig_always = False
has_long_range = True
MC-PDFT state 4 E = -741.0604054269523, Eot(tPBE) = -82.78555703487142
